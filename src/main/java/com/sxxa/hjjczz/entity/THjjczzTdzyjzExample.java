package com.sxxa.hjjczz.entity;

import java.util.ArrayList;
import java.util.List;

public class THjjczzTdzyjzExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public THjjczzTdzyjzExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStartYearIsNull() {
            addCriterion("START_YEAR is null");
            return (Criteria) this;
        }

        public Criteria andStartYearIsNotNull() {
            addCriterion("START_YEAR is not null");
            return (Criteria) this;
        }

        public Criteria andStartYearEqualTo(Integer value) {
            addCriterion("START_YEAR =", value, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearNotEqualTo(Integer value) {
            addCriterion("START_YEAR <>", value, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearGreaterThan(Integer value) {
            addCriterion("START_YEAR >", value, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("START_YEAR >=", value, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearLessThan(Integer value) {
            addCriterion("START_YEAR <", value, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearLessThanOrEqualTo(Integer value) {
            addCriterion("START_YEAR <=", value, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearIn(List<Integer> values) {
            addCriterion("START_YEAR in", values, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearNotIn(List<Integer> values) {
            addCriterion("START_YEAR not in", values, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearBetween(Integer value1, Integer value2) {
            addCriterion("START_YEAR between", value1, value2, "startYear");
            return (Criteria) this;
        }

        public Criteria andStartYearNotBetween(Integer value1, Integer value2) {
            addCriterion("START_YEAR not between", value1, value2, "startYear");
            return (Criteria) this;
        }

        public Criteria andEndYearIsNull() {
            addCriterion("END_YEAR is null");
            return (Criteria) this;
        }

        public Criteria andEndYearIsNotNull() {
            addCriterion("END_YEAR is not null");
            return (Criteria) this;
        }

        public Criteria andEndYearEqualTo(Integer value) {
            addCriterion("END_YEAR =", value, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearNotEqualTo(Integer value) {
            addCriterion("END_YEAR <>", value, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearGreaterThan(Integer value) {
            addCriterion("END_YEAR >", value, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("END_YEAR >=", value, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearLessThan(Integer value) {
            addCriterion("END_YEAR <", value, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearLessThanOrEqualTo(Integer value) {
            addCriterion("END_YEAR <=", value, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearIn(List<Integer> values) {
            addCriterion("END_YEAR in", values, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearNotIn(List<Integer> values) {
            addCriterion("END_YEAR not in", values, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearBetween(Integer value1, Integer value2) {
            addCriterion("END_YEAR between", value1, value2, "endYear");
            return (Criteria) this;
        }

        public Criteria andEndYearNotBetween(Integer value1, Integer value2) {
            addCriterion("END_YEAR not between", value1, value2, "endYear");
            return (Criteria) this;
        }

        public Criteria andTdlylxIsNull() {
            addCriterion("TDLYLX is null");
            return (Criteria) this;
        }

        public Criteria andTdlylxIsNotNull() {
            addCriterion("TDLYLX is not null");
            return (Criteria) this;
        }

        public Criteria andTdlylxEqualTo(String value) {
            addCriterion("TDLYLX =", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxNotEqualTo(String value) {
            addCriterion("TDLYLX <>", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxGreaterThan(String value) {
            addCriterion("TDLYLX >", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxGreaterThanOrEqualTo(String value) {
            addCriterion("TDLYLX >=", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxLessThan(String value) {
            addCriterion("TDLYLX <", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxLessThanOrEqualTo(String value) {
            addCriterion("TDLYLX <=", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxLike(String value) {
            addCriterion("TDLYLX like", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxNotLike(String value) {
            addCriterion("TDLYLX not like", value, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxIn(List<String> values) {
            addCriterion("TDLYLX in", values, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxNotIn(List<String> values) {
            addCriterion("TDLYLX not in", values, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxBetween(String value1, String value2) {
            addCriterion("TDLYLX between", value1, value2, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andTdlylxNotBetween(String value1, String value2) {
            addCriterion("TDLYLX not between", value1, value2, "tdlylx");
            return (Criteria) this;
        }

        public Criteria andZylxIsNull() {
            addCriterion("ZYLX is null");
            return (Criteria) this;
        }

        public Criteria andZylxIsNotNull() {
            addCriterion("ZYLX is not null");
            return (Criteria) this;
        }

        public Criteria andZylxEqualTo(String value) {
            addCriterion("ZYLX =", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxNotEqualTo(String value) {
            addCriterion("ZYLX <>", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxGreaterThan(String value) {
            addCriterion("ZYLX >", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxGreaterThanOrEqualTo(String value) {
            addCriterion("ZYLX >=", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxLessThan(String value) {
            addCriterion("ZYLX <", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxLessThanOrEqualTo(String value) {
            addCriterion("ZYLX <=", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxLike(String value) {
            addCriterion("ZYLX like", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxNotLike(String value) {
            addCriterion("ZYLX not like", value, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxIn(List<String> values) {
            addCriterion("ZYLX in", values, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxNotIn(List<String> values) {
            addCriterion("ZYLX not in", values, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxBetween(String value1, String value2) {
            addCriterion("ZYLX between", value1, value2, "zylx");
            return (Criteria) this;
        }

        public Criteria andZylxNotBetween(String value1, String value2) {
            addCriterion("ZYLX not between", value1, value2, "zylx");
            return (Criteria) this;
        }

        public Criteria andGdIsNull() {
            addCriterion("GD is null");
            return (Criteria) this;
        }

        public Criteria andGdIsNotNull() {
            addCriterion("GD is not null");
            return (Criteria) this;
        }

        public Criteria andGdEqualTo(Double value) {
            addCriterion("GD =", value, "gd");
            return (Criteria) this;
        }

        public Criteria andGdNotEqualTo(Double value) {
            addCriterion("GD <>", value, "gd");
            return (Criteria) this;
        }

        public Criteria andGdGreaterThan(Double value) {
            addCriterion("GD >", value, "gd");
            return (Criteria) this;
        }

        public Criteria andGdGreaterThanOrEqualTo(Double value) {
            addCriterion("GD >=", value, "gd");
            return (Criteria) this;
        }

        public Criteria andGdLessThan(Double value) {
            addCriterion("GD <", value, "gd");
            return (Criteria) this;
        }

        public Criteria andGdLessThanOrEqualTo(Double value) {
            addCriterion("GD <=", value, "gd");
            return (Criteria) this;
        }

        public Criteria andGdIn(List<Double> values) {
            addCriterion("GD in", values, "gd");
            return (Criteria) this;
        }

        public Criteria andGdNotIn(List<Double> values) {
            addCriterion("GD not in", values, "gd");
            return (Criteria) this;
        }

        public Criteria andGdBetween(Double value1, Double value2) {
            addCriterion("GD between", value1, value2, "gd");
            return (Criteria) this;
        }

        public Criteria andGdNotBetween(Double value1, Double value2) {
            addCriterion("GD not between", value1, value2, "gd");
            return (Criteria) this;
        }

        public Criteria andLdIsNull() {
            addCriterion("LD is null");
            return (Criteria) this;
        }

        public Criteria andLdIsNotNull() {
            addCriterion("LD is not null");
            return (Criteria) this;
        }

        public Criteria andLdEqualTo(Double value) {
            addCriterion("LD =", value, "ld");
            return (Criteria) this;
        }

        public Criteria andLdNotEqualTo(Double value) {
            addCriterion("LD <>", value, "ld");
            return (Criteria) this;
        }

        public Criteria andLdGreaterThan(Double value) {
            addCriterion("LD >", value, "ld");
            return (Criteria) this;
        }

        public Criteria andLdGreaterThanOrEqualTo(Double value) {
            addCriterion("LD >=", value, "ld");
            return (Criteria) this;
        }

        public Criteria andLdLessThan(Double value) {
            addCriterion("LD <", value, "ld");
            return (Criteria) this;
        }

        public Criteria andLdLessThanOrEqualTo(Double value) {
            addCriterion("LD <=", value, "ld");
            return (Criteria) this;
        }

        public Criteria andLdIn(List<Double> values) {
            addCriterion("LD in", values, "ld");
            return (Criteria) this;
        }

        public Criteria andLdNotIn(List<Double> values) {
            addCriterion("LD not in", values, "ld");
            return (Criteria) this;
        }

        public Criteria andLdBetween(Double value1, Double value2) {
            addCriterion("LD between", value1, value2, "ld");
            return (Criteria) this;
        }

        public Criteria andLdNotBetween(Double value1, Double value2) {
            addCriterion("LD not between", value1, value2, "ld");
            return (Criteria) this;
        }

        public Criteria andCdIsNull() {
            addCriterion("CD is null");
            return (Criteria) this;
        }

        public Criteria andCdIsNotNull() {
            addCriterion("CD is not null");
            return (Criteria) this;
        }

        public Criteria andCdEqualTo(Double value) {
            addCriterion("CD =", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdNotEqualTo(Double value) {
            addCriterion("CD <>", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdGreaterThan(Double value) {
            addCriterion("CD >", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdGreaterThanOrEqualTo(Double value) {
            addCriterion("CD >=", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdLessThan(Double value) {
            addCriterion("CD <", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdLessThanOrEqualTo(Double value) {
            addCriterion("CD <=", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdIn(List<Double> values) {
            addCriterion("CD in", values, "cd");
            return (Criteria) this;
        }

        public Criteria andCdNotIn(List<Double> values) {
            addCriterion("CD not in", values, "cd");
            return (Criteria) this;
        }

        public Criteria andCdBetween(Double value1, Double value2) {
            addCriterion("CD between", value1, value2, "cd");
            return (Criteria) this;
        }

        public Criteria andCdNotBetween(Double value1, Double value2) {
            addCriterion("CD not between", value1, value2, "cd");
            return (Criteria) this;
        }

        public Criteria andSyIsNull() {
            addCriterion("SY is null");
            return (Criteria) this;
        }

        public Criteria andSyIsNotNull() {
            addCriterion("SY is not null");
            return (Criteria) this;
        }

        public Criteria andSyEqualTo(Double value) {
            addCriterion("SY =", value, "sy");
            return (Criteria) this;
        }

        public Criteria andSyNotEqualTo(Double value) {
            addCriterion("SY <>", value, "sy");
            return (Criteria) this;
        }

        public Criteria andSyGreaterThan(Double value) {
            addCriterion("SY >", value, "sy");
            return (Criteria) this;
        }

        public Criteria andSyGreaterThanOrEqualTo(Double value) {
            addCriterion("SY >=", value, "sy");
            return (Criteria) this;
        }

        public Criteria andSyLessThan(Double value) {
            addCriterion("SY <", value, "sy");
            return (Criteria) this;
        }

        public Criteria andSyLessThanOrEqualTo(Double value) {
            addCriterion("SY <=", value, "sy");
            return (Criteria) this;
        }

        public Criteria andSyIn(List<Double> values) {
            addCriterion("SY in", values, "sy");
            return (Criteria) this;
        }

        public Criteria andSyNotIn(List<Double> values) {
            addCriterion("SY not in", values, "sy");
            return (Criteria) this;
        }

        public Criteria andSyBetween(Double value1, Double value2) {
            addCriterion("SY between", value1, value2, "sy");
            return (Criteria) this;
        }

        public Criteria andSyNotBetween(Double value1, Double value2) {
            addCriterion("SY not between", value1, value2, "sy");
            return (Criteria) this;
        }

        public Criteria andJsydIsNull() {
            addCriterion("JSYD is null");
            return (Criteria) this;
        }

        public Criteria andJsydIsNotNull() {
            addCriterion("JSYD is not null");
            return (Criteria) this;
        }

        public Criteria andJsydEqualTo(Double value) {
            addCriterion("JSYD =", value, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydNotEqualTo(Double value) {
            addCriterion("JSYD <>", value, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydGreaterThan(Double value) {
            addCriterion("JSYD >", value, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydGreaterThanOrEqualTo(Double value) {
            addCriterion("JSYD >=", value, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydLessThan(Double value) {
            addCriterion("JSYD <", value, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydLessThanOrEqualTo(Double value) {
            addCriterion("JSYD <=", value, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydIn(List<Double> values) {
            addCriterion("JSYD in", values, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydNotIn(List<Double> values) {
            addCriterion("JSYD not in", values, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydBetween(Double value1, Double value2) {
            addCriterion("JSYD between", value1, value2, "jsyd");
            return (Criteria) this;
        }

        public Criteria andJsydNotBetween(Double value1, Double value2) {
            addCriterion("JSYD not between", value1, value2, "jsyd");
            return (Criteria) this;
        }

        public Criteria andWlyIsNull() {
            addCriterion("WLY is null");
            return (Criteria) this;
        }

        public Criteria andWlyIsNotNull() {
            addCriterion("WLY is not null");
            return (Criteria) this;
        }

        public Criteria andWlyEqualTo(Double value) {
            addCriterion("WLY =", value, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyNotEqualTo(Double value) {
            addCriterion("WLY <>", value, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyGreaterThan(Double value) {
            addCriterion("WLY >", value, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyGreaterThanOrEqualTo(Double value) {
            addCriterion("WLY >=", value, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyLessThan(Double value) {
            addCriterion("WLY <", value, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyLessThanOrEqualTo(Double value) {
            addCriterion("WLY <=", value, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyIn(List<Double> values) {
            addCriterion("WLY in", values, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyNotIn(List<Double> values) {
            addCriterion("WLY not in", values, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyBetween(Double value1, Double value2) {
            addCriterion("WLY between", value1, value2, "wly");
            return (Criteria) this;
        }

        public Criteria andWlyNotBetween(Double value1, Double value2) {
            addCriterion("WLY not between", value1, value2, "wly");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("TYPE =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("TYPE <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("TYPE >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("TYPE >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("TYPE <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("TYPE <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("TYPE like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("TYPE not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("TYPE in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("TYPE not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("TYPE between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("TYPE not between", value1, value2, "type");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 04 17:03:32 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hjjczz_tdzyjz
     *
     * @mbggenerated Thu Mar 04 17:03:32 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}